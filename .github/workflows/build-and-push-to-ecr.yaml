name: Build, Tag, and Push to ECR

on:
  push:
    branches: ["main"]

env:
  AWS_REGION: us-east-1 # set this to your preferred AWS region, e.g. us-west-1
  ECR_BACKEND_REPOSITORY: cci/backend # set this to your Amazon ECR repository name
  ECR_LANDING_REPOSITORY: cci/landing # set this to your Amazon ECR repository name
  ECR_INVESTMENT_REPOSITORY: cci/investment # set this to your Amazon ECR repository name

permissions:
  contents: read

jobs:
  deploy:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Important for changed files detection

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Determine changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          format: space # Output changed files as a space-separated list

      - name: Build and push images (conditional)
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          if [[ "${{ steps.changed-files.outputs.all_changed_files }}" == "" ]]; then
            echo "No relevant files changed. Skipping image builds."
            exit 0 # Successful exit
          fi

          if [[ "${{ steps.changed-files.outputs.all_changed_files }}" == *apps/backend/* ]]; then
            docker build -f apps/backend/Dockerfile . -t $ECR_REGISTRY/$ECR_BACKEND_REPOSITORY:$IMAGE_TAG
            docker tag $ECR_REGISTRY/$ECR_BACKEND_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_BACKEND_REPOSITORY:production
            docker push $ECR_REGISTRY/$ECR_BACKEND_REPOSITORY:$IMAGE_TAG
            docker push $ECR_REGISTRY/$ECR_BACKEND_REPOSITORY:production
            echo "Built and pushed backend image."
          fi

          if [[ "${{ steps.changed-files.outputs.all_changed_files }}" == *apps/landing/* ]]; then
            docker build -f apps/landing/Dockerfile . -t $ECR_REGISTRY/$ECR_LANDING_REPOSITORY:$IMAGE_TAG
            docker tag $ECR_REGISTRY/$ECR_LANDING_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_LANDING_REPOSITORY:production
            docker push $ECR_REGISTRY/$ECR_LANDING_REPOSITORY:$IMAGE_TAG
            docker push $ECR_REGISTRY/$ECR_LANDING_REPOSITORY:production
            echo "Built and pushed landing image."
          fi

          if [[ "${{ steps.changed-files.outputs.all_changed_files }}" == *apps/investment-calculator/* ]]; then
            cd apps/investment-calculator
            docker build . -t $ECR_REGISTRY/$ECR_INVESTMENT_REPOSITORY:$IMAGE_TAG
            docker tag $ECR_REGISTRY/$ECR_INVESTMENT_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_INVESTMENT_REPOSITORY:production
            docker push $ECR_REGISTRY/$ECR_INVESTMENT_REPOSITORY:$IMAGE_TAG
            docker push $ECR_REGISTRY/$ECR_INVESTMENT_REPOSITORY:production
            echo "Built and pushed investment image."
          fi
