/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as VehiclesIndexRouteImport } from './routes/vehicles/index'
import { Route as CobrosIndexRouteImport } from './routes/cobros/index'
import { Route as VehiclesInspectionRouteImport } from './routes/vehicles/inspection'
import { Route as CrmOpportunitiesRouteImport } from './routes/crm/opportunities'
import { Route as CrmLeadsRouteImport } from './routes/crm/leads'
import { Route as CrmCompaniesRouteImport } from './routes/crm/companies'
import { Route as CrmClientsRouteImport } from './routes/crm/clients'
import { Route as CrmAnalysisRouteImport } from './routes/crm/analysis'
import { Route as CobrosIdRouteImport } from './routes/cobros/$id'
import { Route as AdminUsersRouteImport } from './routes/admin/users'
import { Route as AdminSettingsRouteImport } from './routes/admin/settings'
import { Route as AdminReportsRouteImport } from './routes/admin/reports'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const VehiclesIndexRoute = VehiclesIndexRouteImport.update({
  id: '/vehicles/',
  path: '/vehicles/',
  getParentRoute: () => rootRouteImport,
} as any)
const CobrosIndexRoute = CobrosIndexRouteImport.update({
  id: '/cobros/',
  path: '/cobros/',
  getParentRoute: () => rootRouteImport,
} as any)
const VehiclesInspectionRoute = VehiclesInspectionRouteImport.update({
  id: '/vehicles/inspection',
  path: '/vehicles/inspection',
  getParentRoute: () => rootRouteImport,
} as any)
const CrmOpportunitiesRoute = CrmOpportunitiesRouteImport.update({
  id: '/crm/opportunities',
  path: '/crm/opportunities',
  getParentRoute: () => rootRouteImport,
} as any)
const CrmLeadsRoute = CrmLeadsRouteImport.update({
  id: '/crm/leads',
  path: '/crm/leads',
  getParentRoute: () => rootRouteImport,
} as any)
const CrmCompaniesRoute = CrmCompaniesRouteImport.update({
  id: '/crm/companies',
  path: '/crm/companies',
  getParentRoute: () => rootRouteImport,
} as any)
const CrmClientsRoute = CrmClientsRouteImport.update({
  id: '/crm/clients',
  path: '/crm/clients',
  getParentRoute: () => rootRouteImport,
} as any)
const CrmAnalysisRoute = CrmAnalysisRouteImport.update({
  id: '/crm/analysis',
  path: '/crm/analysis',
  getParentRoute: () => rootRouteImport,
} as any)
const CobrosIdRoute = CobrosIdRouteImport.update({
  id: '/cobros/$id',
  path: '/cobros/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminUsersRoute = AdminUsersRouteImport.update({
  id: '/admin/users',
  path: '/admin/users',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminSettingsRoute = AdminSettingsRouteImport.update({
  id: '/admin/settings',
  path: '/admin/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminReportsRoute = AdminReportsRouteImport.update({
  id: '/admin/reports',
  path: '/admin/reports',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/admin/reports': typeof AdminReportsRoute
  '/admin/settings': typeof AdminSettingsRoute
  '/admin/users': typeof AdminUsersRoute
  '/cobros/$id': typeof CobrosIdRoute
  '/crm/analysis': typeof CrmAnalysisRoute
  '/crm/clients': typeof CrmClientsRoute
  '/crm/companies': typeof CrmCompaniesRoute
  '/crm/leads': typeof CrmLeadsRoute
  '/crm/opportunities': typeof CrmOpportunitiesRoute
  '/vehicles/inspection': typeof VehiclesInspectionRoute
  '/cobros': typeof CobrosIndexRoute
  '/vehicles': typeof VehiclesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/admin/reports': typeof AdminReportsRoute
  '/admin/settings': typeof AdminSettingsRoute
  '/admin/users': typeof AdminUsersRoute
  '/cobros/$id': typeof CobrosIdRoute
  '/crm/analysis': typeof CrmAnalysisRoute
  '/crm/clients': typeof CrmClientsRoute
  '/crm/companies': typeof CrmCompaniesRoute
  '/crm/leads': typeof CrmLeadsRoute
  '/crm/opportunities': typeof CrmOpportunitiesRoute
  '/vehicles/inspection': typeof VehiclesInspectionRoute
  '/cobros': typeof CobrosIndexRoute
  '/vehicles': typeof VehiclesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/admin/reports': typeof AdminReportsRoute
  '/admin/settings': typeof AdminSettingsRoute
  '/admin/users': typeof AdminUsersRoute
  '/cobros/$id': typeof CobrosIdRoute
  '/crm/analysis': typeof CrmAnalysisRoute
  '/crm/clients': typeof CrmClientsRoute
  '/crm/companies': typeof CrmCompaniesRoute
  '/crm/leads': typeof CrmLeadsRoute
  '/crm/opportunities': typeof CrmOpportunitiesRoute
  '/vehicles/inspection': typeof VehiclesInspectionRoute
  '/cobros/': typeof CobrosIndexRoute
  '/vehicles/': typeof VehiclesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/login'
    | '/admin/reports'
    | '/admin/settings'
    | '/admin/users'
    | '/cobros/$id'
    | '/crm/analysis'
    | '/crm/clients'
    | '/crm/companies'
    | '/crm/leads'
    | '/crm/opportunities'
    | '/vehicles/inspection'
    | '/cobros'
    | '/vehicles'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/login'
    | '/admin/reports'
    | '/admin/settings'
    | '/admin/users'
    | '/cobros/$id'
    | '/crm/analysis'
    | '/crm/clients'
    | '/crm/companies'
    | '/crm/leads'
    | '/crm/opportunities'
    | '/vehicles/inspection'
    | '/cobros'
    | '/vehicles'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/login'
    | '/admin/reports'
    | '/admin/settings'
    | '/admin/users'
    | '/cobros/$id'
    | '/crm/analysis'
    | '/crm/clients'
    | '/crm/companies'
    | '/crm/leads'
    | '/crm/opportunities'
    | '/vehicles/inspection'
    | '/cobros/'
    | '/vehicles/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  LoginRoute: typeof LoginRoute
  AdminReportsRoute: typeof AdminReportsRoute
  AdminSettingsRoute: typeof AdminSettingsRoute
  AdminUsersRoute: typeof AdminUsersRoute
  CobrosIdRoute: typeof CobrosIdRoute
  CrmAnalysisRoute: typeof CrmAnalysisRoute
  CrmClientsRoute: typeof CrmClientsRoute
  CrmCompaniesRoute: typeof CrmCompaniesRoute
  CrmLeadsRoute: typeof CrmLeadsRoute
  CrmOpportunitiesRoute: typeof CrmOpportunitiesRoute
  VehiclesInspectionRoute: typeof VehiclesInspectionRoute
  CobrosIndexRoute: typeof CobrosIndexRoute
  VehiclesIndexRoute: typeof VehiclesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/vehicles/': {
      id: '/vehicles/'
      path: '/vehicles'
      fullPath: '/vehicles'
      preLoaderRoute: typeof VehiclesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cobros/': {
      id: '/cobros/'
      path: '/cobros'
      fullPath: '/cobros'
      preLoaderRoute: typeof CobrosIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/vehicles/inspection': {
      id: '/vehicles/inspection'
      path: '/vehicles/inspection'
      fullPath: '/vehicles/inspection'
      preLoaderRoute: typeof VehiclesInspectionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/crm/opportunities': {
      id: '/crm/opportunities'
      path: '/crm/opportunities'
      fullPath: '/crm/opportunities'
      preLoaderRoute: typeof CrmOpportunitiesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/crm/leads': {
      id: '/crm/leads'
      path: '/crm/leads'
      fullPath: '/crm/leads'
      preLoaderRoute: typeof CrmLeadsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/crm/companies': {
      id: '/crm/companies'
      path: '/crm/companies'
      fullPath: '/crm/companies'
      preLoaderRoute: typeof CrmCompaniesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/crm/clients': {
      id: '/crm/clients'
      path: '/crm/clients'
      fullPath: '/crm/clients'
      preLoaderRoute: typeof CrmClientsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/crm/analysis': {
      id: '/crm/analysis'
      path: '/crm/analysis'
      fullPath: '/crm/analysis'
      preLoaderRoute: typeof CrmAnalysisRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cobros/$id': {
      id: '/cobros/$id'
      path: '/cobros/$id'
      fullPath: '/cobros/$id'
      preLoaderRoute: typeof CobrosIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/users': {
      id: '/admin/users'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/settings': {
      id: '/admin/settings'
      path: '/admin/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AdminSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/reports': {
      id: '/admin/reports'
      path: '/admin/reports'
      fullPath: '/admin/reports'
      preLoaderRoute: typeof AdminReportsRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  LoginRoute: LoginRoute,
  AdminReportsRoute: AdminReportsRoute,
  AdminSettingsRoute: AdminSettingsRoute,
  AdminUsersRoute: AdminUsersRoute,
  CobrosIdRoute: CobrosIdRoute,
  CrmAnalysisRoute: CrmAnalysisRoute,
  CrmClientsRoute: CrmClientsRoute,
  CrmCompaniesRoute: CrmCompaniesRoute,
  CrmLeadsRoute: CrmLeadsRoute,
  CrmOpportunitiesRoute: CrmOpportunitiesRoute,
  VehiclesInspectionRoute: VehiclesInspectionRoute,
  CobrosIndexRoute: CobrosIndexRoute,
  VehiclesIndexRoute: VehiclesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
